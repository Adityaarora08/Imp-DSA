//String Matching
#include<bits/stdc++.h>
using namespace std;
void longest(vector<int>& lps,string s){
    int i=1,j=0;
    while(i<s.length()){
        if(s[i]==s[j]){
            lps[i]=j+1;
            i++;
            j++;
        }else{
            if(j!=0){
                j=lps[j-1];
            }else{
                lps[i]=0;
                i++;
            }
        }
    }
}
bool kpmSearch(string s,string p,vector<int> &lps){
    int i=0,j=0,maxi=INT_MIN;
    while(i<s.length()){
        if(s[i]==p[j]){
            maxi=max(maxi,j+1);
            j++;i++;
        }else{
            if(j!=0){
                j=lps[j-1];
            }else{
                i++;
            }
        }
    }
    if (maxi == p.length()){
        return true;
    }else return false;
}
void build(vector<int> &Z,string s,string p,int n,int m){
    string str=p+"&"+s;
    int j=0;
    for(int i=1;i<str.length();i++){
        if(str[i]==str[j]);
        int k=i;
        while(str[j]==str[k]){
            k++;
            j++;
        }
        Z[i]=k-i;
        j=0;
    }
    // int i=0,j=1;
    // while(j<str.length() ){
    //   if (str[i] == '&')i=0;
    //   if(str[i]==str[j]){
    //      while()
    //   }
    // }
}
int main(){
    
   int t;cin>>t;
   while(t--){
       string s,p;
       cin>>p>>s;
    //    vector<int> lps(p.length(),0);
    //    longest(lps,p);
    //    if(kpmSearch(s,  p, lps)){
    //        cout<<"Yes"<<endl;
    //    }else
    //      cout << "No" << endl;
    int n=s.size(),m=p.size();
    vector<int> Z(n+m+1,0);
    build(Z,s,p,n,m);
    bool flag=false;
    for (int i = 0; i < Z.size(); i++)
      if (Z[i] == p.length()) {
        flag=true;
        break;
      }
    if (flag) {
      cout << "Yes" << endl;
    } else
      cout << "No" << endl;
      }

    return 0;
}
