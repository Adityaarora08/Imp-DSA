class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>> ans;
        if( n<4){
            return ans;
        }
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-3;i++){
            for(int j=i+1;j<n-2;j++){
                long long sum=(long long)target-(long long)(nums[i]+nums[j]);
                int low=j+1,high=n-1;
                while(low<high){
                    long long target2=sum-nums[low]-nums[high];
                    if(target2==0){
                        int l=nums[low],h=nums[high];
                        ans.push_back({nums[i],nums[j],nums[low],nums[high]});
                        while(low<high && l==nums[low])low++;
                        while(high>low && h==nums[high])high--;
                    }else if(target2<0){
                        high--;
                    }else{
                        low++;
                    }
                }
                while(j<n-1 && nums[j]==nums[j+1])++j;
            }
            while(i<n-1 && nums[i+1]==nums[i])++i;
            }
        return ans;
    }
    
};
