/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        map<int,vector<int>> mp;
        // int vLevel=0;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        while(!q.empty()){
            int size=q.size();
            vector<pair<int,int>> temp;
            while(size--){
                TreeNode* curr=q.front().first;
                int level=q.front().second;
                temp.push_back({curr->val,level});
                // mp[level].push_back(curr->val);
                q.pop();
                if(curr->right){
                    q.push({curr->right,level+1});
                }
                if(curr->left){
                    q.push({curr->left,level-1});
                }
            }
            sort(temp.begin(),temp.end());
            for(int i=0;i<temp.size();i++){
                mp[temp[i].second].push_back(temp[i].first);
            }
            
        }
        for(auto i:mp){
            ans.push_back(i.second);
        }
        return ans;
        
    }
};
