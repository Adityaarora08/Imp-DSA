class Solution {
public:
    bool checkP(int i,int j,string &s){
        // int i=0,j=s.length()-1;
            if(i>=j) return true;
            if(s[i]!=s[j])return false;
            return checkP(i+1,j-1,s);
    }
    // int f(int i,int n,string s,vector<int> &dp){
    //     if(i==n)return 0;
    //     string temp="";
    //     int mini=INT_MAX;
    //     if(dp[i]!=-1)return dp[i];
    //     for(int j=i;j<n;j++){
    //         temp+=s[j];
    //         if(checkP(temp)){
    //             int cuts=1+f(j+1,n,s,dp);
    //             mini=min(mini,cuts);
    //         }
    //     }
    //     return dp[i]=mini;
    // }
    int minCut(string s) {
        int n=s.length();
        vector<int> dp(n+1,0);
        // return f(0,n,s,dp)-1;
        
        for(int i=n-1;i>=0;i--){
            string temp="";
            int mini=INT_MAX;
            for(int j=i;j<n;j++){
                // temp+=s[j];
                if(checkP(i,j,s)){
                    int cuts=1+dp[j+1];
                    mini=min(mini,cuts);
                }
            }
            dp[i]=mini;
        }
        return dp[0]-1;
    }
};
