class Solution {
public:
    int combi(int idx,int target,vector<int>& nums,vector<int> &dp){
         if(target==0){
            return 1;
        }
        if(idx<0 ||target<0){
            //  if(target%nums[idx]==0)
            // return 1;
            return 0;
        }
        if(dp[target]!=-1)return dp[target];
        int take=0,notTake=combi(idx-1,target,nums,dp);
        if(nums[idx]<=target)take=combi(nums.size()-1,target-nums[idx],nums,dp);
        return dp[target]=take+notTake;
    }
    int combinationSum4(vector<int>& nums, int target) {
        // vector<vector<int>> dp(nums.size()+1,vector<int>(target+1,0));
        vector<int> dp(target+1,-1);
        return combi(nums.size()-1,target,nums,dp);
    }
};
