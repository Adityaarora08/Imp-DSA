class Solution {
public:
int ways(int i,string s,vector<int> &dp){
    // if(i>=s.length()){
    //     return 0;
    // }
    if(s[i]=='0')return 0;
    if(i==s.length())return 1;
    if(dp[i]!=-1)return dp[i];
    int res=ways(i+1,s,dp);
    if(i<s.length()-1 &&(s[i]=='1' || s[i]=='2' && s[i+1]<='6')){
        res+= ways(i+2,s,dp);
    }
    return dp[i]=res;
}
    int numDecodings(string s) {
        // vector<int> dp(s.length()+1,0);
        // return ways(0,s,dp);
        // dp[s.length()]=1;
        int prev1=1,prev2=0;
        for(int i=s.length()-1;i>=0;i--){
            int temp=0;
            if(s[i]=='0'){
                prev2=prev1;
                prev1=0;
                continue;
            }
            int res=prev1;
            if(i<s.length()-1 &&(s[i]=='1' || s[i]=='2' && s[i+1]<='6')){
                res+= prev2;
            }
            prev2=prev1;
            prev1=res;
        }
        return prev1;
    }
};
