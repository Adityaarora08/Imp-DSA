QuickSelect to find kth largest/smallest number

class Solution {
public:
//can be done using priority queues as well
    int quickSelect(vector<int> &nums,int l,int r,int k){
       int pivot = nums[r],p=l;
       for(int i=l;i<r;i++){
           if(nums[i]<=pivot){
               swap(nums[i],nums[p]);
               p++;
           }
       }
        swap(nums[p],nums[r]);
        if(p<k){
            return quickSelect(nums,p+1,r,k);
        }else if(p>k){
            return quickSelect(nums,l,p-1,k);
        }else{
            return nums[p];
        }
    }
    int findKthLargest(vector<int>& nums, int k) {
         k=nums.size()-k;
        return quickSelect(nums,0,nums.size()-1,k);
    }
};
