class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        vector<vector<int>> dp(2,vector<int>(k+1,0)),temp(2,vector<int>(k+1,0));
        for(int i=0;i<k+1;i++)dp[0][i]=0;

        for(int i=n-1;i>=0;i--){
            for(int buy=0;buy<2;buy++){
                temp[0][0]=temp[1][0]=0;
                for(int t=1;t<=k;t++){
                    int profit=0;
                    if(buy){
                    int sell=prices[i]+dp[0][t-1];
                    int notSell=dp[1][t];
                    profit=max(sell,notSell);
                    }else{
                        int buy=-prices[i]+dp[1][t];
                        int notBuy=dp[0][t];
                        profit=max(buy,notBuy);
                    }
                    temp[buy][t]=profit;
                    }
                    dp=temp;
            }
        }
        return dp[0][k];
    }
};
