class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        queue<pair<int,int> > q;
        int count=-1;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==2){
                    q.push({i,j});
                }
            }
        }
        while(!q.empty()){
            int n=q.size();
            count++;
            for(int k=0;k<n;k++){
                int i=q.front().first,j=q.front().second;
               q.pop();
               if(i>0 && grid[i-1][j]==1){
                   grid[i-1][j]=2;
                   q.push({i-1,j});
               }
               if(i<grid.size()-1 && grid[i+1][j]==1){
                   grid[i+1][j]=2;
                   q.push({i+1,j});
               }
               if(j>0 && grid[i][j-1]==1){
                   grid[i][j-1]=2;
                   q.push({i,j-1});
               }
               if(j<grid[0].size()-1 && grid[i][j+1]==1){
                   grid[i][j+1]=2;
                   q.push({i,j+1});
               }
            }
        }
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==1){
                    return -1;
                }
            }
        }
        if(count==-1)return 0;
        return count;
    }
};
