class Solution {
public:
    void combinations(vector<int>& candidates, int target, int sum,vector<vector<int>> &ans, vector<int> &ds , int i){
        if(i>=candidates.size())return;
        if(sum==target){
            ans.push_back(ds);return;
        }
        if(sum>target)return;
        // for(int i=index;i<candidates.size();i++){
            ds.push_back(candidates[i]);
            combinations(candidates,target,sum+candidates[i],ans,ds,i);
            ds.pop_back();
            combinations(candidates,target,sum,ans,ds,i+1);
        // }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
     vector<vector<int>> ans;
     vector<int> ds;
     combinations(candidates,target,0,ans,ds,0);  
     return ans; 
    }
};
