class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n=arr.size();
        int MOD= 1e9+7;
        vector<long long> nextSmaller(n);
        vector<long long> prevSmaller(n);
        stack<int> st1,st2;
        for(int i=0;i<n;i++){
            nextSmaller[i]=n-i-1;
            prevSmaller[i]=i;
        }
        for(int i=0;i<n;i++){
            while(!st1.empty() && arr[st1.top()]>=arr[i]){
                nextSmaller[st1.top()]=i-st1.top()-1;
                st1.pop();
            }
            st1.push(i);
        }
        for(int i=n-1;i>=0;i--){
            while(!st2.empty() && arr[st2.top()]>arr[i]){
                prevSmaller[st2.top()]=st2.top()-i-1;
                st2.pop();
            }
            st2.push(i);
        }
        long long ans=0;
        for(int i=0;i<n;i++){
            ans+=((prevSmaller[i]+1)*(nextSmaller[i]+1))*arr[i];
            ans%=MOD;
        }
        return ans%MOD;
    }
};
