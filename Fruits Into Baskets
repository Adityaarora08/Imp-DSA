//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int totalFruits(int N, vector<int> &fruits) {
        int type1=-1,type2=-1,count1=0,count2=0,index1,index2,maxi=0;
        int l=0,h=0;
        while(h<fruits.size()){
            if(fruits[h]==type1){
                count1++;
                index1=h;
            } else if(fruits[h]==type2){
                count2++;
                index2=h;
            }else{
                if(type1==-1){
                    index1=h;
                    type1=fruits[h];
                    count1=1;
                }else if(type2==-1){
                    index2=h;
                    type2=fruits[h];
                    count2=1;
                }else{
                    if(fruits[h-1]==type1){
                        type2=fruits[h];
                        count2=1;
                        count1=(h-index2-1);
                        index2=h;
                    }else{
                        type1=fruits[h];
                        count1=1;
                        count2=(h-index1-1);
                        index1=h;
                    }
                }
            }
            maxi=max((type1==-1?0:count1)+(type2==-1?0:count2),maxi);
            h++;
            
        }
        return maxi;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;
        vector<int> fruits(N);
        for (int i = 0; i < N; i++) cin >> fruits[i];
        Solution obj;
        cout << obj.totalFruits(N, fruits) << endl;
    }
    return 0;
}

// } Driver Code Ends
