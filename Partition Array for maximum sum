class Solution {
public:
int f(int i,int n,int k,vector<int>& arr,vector<int>& dp){
    if(i>=n)return 0;
    if(dp[i]!=-1)return dp[i];
    int ans=INT_MIN;
    int len=0,maxi=INT_MIN;
    for(int j=i;j<min(n,i+k);j++){
        maxi=max(maxi,arr[j]);
        len++;
        int sum=len*maxi +f(j+1,n,k,arr,dp);
        ans=max(sum,ans);
    }
    return dp[i]=ans;
}
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        int n=arr.size();
        vector<int> dp(n+1,0);
        // return f(0,n,k,arr,dp);
        for(int i=n-1;i>=0;i--){
            int ans=INT_MIN;
            int len=0,maxi=INT_MIN;
            for(int j=i;j<min(n,i+k);j++){
                maxi=max(maxi,arr[j]);
                len++;
                int sum=len*maxi +dp[j+1];
                ans=max(sum,ans);
            }
            dp[i]=ans;
        }
        return dp[0];
    }
};
