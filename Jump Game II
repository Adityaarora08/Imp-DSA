class Solution {
public:
    int ways(int i,vector<int>& nums,vector<int> &dp){
        if(i>=nums.size()-1){
            return 0;
        }
        if(dp[i]!=-1)return dp[i];
        int ans=1e7;
        for(int j=1;j<=nums[i]&&i+j<nums.size();j++){
            ans=min(ans,ways(i+j,nums,dp));
        }
        return dp[i]=ans+1;
    }
    int jump(vector<int>& nums) {
        // vector<int> dp(nums.size()+1,0);
        // return ways(0,nums,dp);
        int end = 0, farthest = 0;
        int jump = 0;

        for(int i = 0; i < nums.size()-1; i++){
            farthest = max(farthest, i + nums[i]);
            if(i == end){
                jump++;
                end = farthest;
            }
        }
        return jump;
    }
};
