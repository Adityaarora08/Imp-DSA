//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h> 
using namespace std; 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data; 
        node = node->next; 
    }  
    cout<<"\n";
} 


// } Driver Code Ends
//User function template for C++

/* 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    public:
    Node* reverseList(Node *head){
        if(head==NULL || head->next==NULL)return head;
        Node* curr=reverseList(head->next);
        // head->next->next->next=head->next;
        head->next->next=head;
        head->next=NULL;
        return curr;
    }
    Node* addOne(Node *head) 
    {
        Node* curr=reverseList(head);
        Node* temp=curr;
        int carry=0;
        bool flag=true;
        while(temp->next!=NULL){
            flag=false;
            if(temp->data!=9){
                temp->data++;
                carry=0;
                break;
            }
            else{
                temp->data=0;
                carry=1;
            }
            temp=temp->next;
        }
        if(temp->data!=9 && (carry==1 || flag)){
            temp->data++;
        }
        if(temp->data==9 && (carry==1 || flag)){
            temp->data=0;
            temp->next=new Node(1);
            temp->next->next=NULL;
        }
        Node* curr2=reverseList(curr);
        return curr2;
    }
};

//{ Driver Code Starts.

int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        
        Node* head = new Node( s[0]-'0' );
        Node* tail = head;
        for(int i=1; i<s.size(); i++)
        {
            tail->next = new Node( s[i]-'0' );
            tail = tail->next;
        }
        Solution ob;
        head = ob.addOne(head);
        printList(head); 
    }
    return 0; 
} 

// } Driver Code Ends
