#include<bits/stdc++.h>
using namespace std;
void longest(vector<int>& lps,string s){
    int i=1,j=0;
    while(i<s.length()){
        if(s[i]==s[j]){
            lps[i]=j+1;
            i++;
            j++;
        }else{
            if(j!=0){
                j=lps[j-1];
            }else{
                lps[i]=0;
                i++;
            }
        }
    }
}
bool kpmSearch(string s,string p,vector<int> &lps){
    int i=0,j=0,maxi=INT_MIN;
    while(i<s.length()){
        if(s[i]==p[j]){
            maxi=max(maxi,j+1);
            j++;i++;
        }else{
            if(j!=0){
                j=lps[j-1];
            }else{
                i++;
            }
        }
    }
    if (maxi == p.length()){
        return true;
    }else return false;
}
int main(){
    
   int t;cin>>t;
   while(t--){
       string s,p;
       cin>>p>>s;
       vector<int> lps(p.length(),0);
       longest(lps,p);
       if(kpmSearch(s,  p, lps)){
           cout<<"Yes"<<endl;
       }else
         cout << "No" << endl;
    //    for(int i=0;i<lps.size();i++)cout<<lps[i]<<" ";
   }

    return 0;
}
