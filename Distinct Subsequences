class Solution {
public:
    int f(int i,int j,string &s, string &t,vector<vector<int>> &dp){
        if(j<0)return 1;
        if(i<0)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s[i]==t[j]){
            int b=f(i-1,j-1,s,t,dp);
            int a=f(i-1,j,s,t,dp);
            return dp[i][j]=a+b;
        }
        return dp[i][j]=f(i-1,j,s,t,dp);
    }
    int numDistinct(string s, string t) {
        int n=s.length(),m=t.length();
        // vector<vector<double>> dp(n+1,vector<double>(m+1,0));
        // return f(n-1,m-1,s,t,dp);
        vector<double> dp(m+1,0),temp(m+1,0);
        for(int i=0;i<=m;i++)dp[i]=0;
        dp[0]=1;
        temp[0]=1;
        // for(int i=0;i<=n;i++)dp[i][0]=1;
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                 if(s[i-1]==t[j-1]){
                    double b=dp[j-1];
                    double a=dp[j];
                    temp[j]=a+b;
                }else temp[j]=dp[j];
            }
            dp=temp;
        }
        return int(dp[m]);
    }
};
