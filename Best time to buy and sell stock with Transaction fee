class Solution {
public:
    int f(int i,int buy,vector<int>& prices,vector<vector<int>> &dp,int fee){
        if(i==prices.size())return 0;
        int profit=0;
        if(dp[i][buy]!=-1)return dp[i][buy];
        if(buy){
            int sell=prices[i]+f(i+1,0,prices,dp,fee)-fee;
            int notSell= f(i+1,1,prices,dp,fee);
            profit=max(sell,notSell);
        }else{
            int buy=-prices[i]+f(i+1,1,prices,dp,fee);
            int notBuy= f(i+1,0,prices,dp,fee);
            profit= max(buy,notBuy);
        }
        return dp[i][buy]=profit;
    }
    int maxProfit(vector<int>& prices, int fee) {
        // int n=prices.size();
        vector<int> dp(2,0),temp(2,0);
        int n=prices.size();
        dp[1]=dp[0]=0;
        for(int i=n-1;i>=0;i--){
            for(int buy=0;buy<2;buy++){
                int profit=0;
                if(buy){
                    int sell=prices[i]+dp[0]-fee;
                    int notSell= dp[1];
                    profit=max(sell,notSell);
                }else{
                    int buy=-prices[i]+dp[1];
                    int notBuy=dp[0];
                    profit= max(buy,notBuy);
                }
                temp[buy]=profit;
                }
                dp=temp;
            }
            return dp[0];
        //  vector<vector<int>> dp(n+1,vector<int> (2,-1));
        //  return f(0,0,prices,dp,fee);
    }
};
