class Solution {
public:
    int f(int i,int j,vector<int>& nums,vector<vector<int>> &dp){
        if(i>j)return 0;
        int maxi=INT_MIN;
        if(dp[i][j]!=-1)return dp[i][j];
        for(int k=i;k<=j;k++){
            int points=nums[i-1]*nums[k]*nums[j+1] + f(i,k-1,nums,dp) +f(k+1,j,nums,dp);
            maxi=max(maxi,points);
        }
        return dp[i][j]=maxi;
    }
    int maxCoins(vector<int>& nums) {
        nums.insert(nums.begin(),1);
        nums.push_back(1);
        vector<vector<int>> dp(nums.size(),vector<int>(nums.size(),0));
        // return f(1,nums.size()-2,nums,dp);
        for(int i=nums.size()-2;i>0;i--){
            for(int j=1;j<nums.size()-1;j++){
                if(i>j)continue;
                int maxi=-1e8;
                for(int k=i;k<=j;k++){
                    int points=nums[i-1]*nums[k]*nums[j+1] + dp[i][k-1] +dp[k+1][j];
                    maxi=max(maxi,points);
                }
                dp[i][j]=maxi;
            }
        }
        return dp[1][nums.size()-2];
    }
};
