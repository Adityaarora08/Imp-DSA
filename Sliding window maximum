class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> q;
        int n=nums.size();
        vector<int> ans;
        // for(int i=0;i<k;i++){
        //     while(!q.empty() && nums[q.back()]<=nums[i]){
        //         q.pop_back();
        //     }
        //     if(q.empty()){
        //         q.push_back(i);
        //     }
        // }
        // ans[0]=nums[q.back()];
        for(int i=0;i<n;i++){
            if(!q.empty() && q.front()==i-k){
                q.pop_front();
            }
            while(!q.empty() && nums[q.back()]<=nums[i]){
                q.pop_back();
            }
            q.push_back(i);
            if(i>=k-1)ans.push_back(nums[q.front()]);
            // if(!q.empty() && nums[q.back()]>nums[i])
            // ans.push_back(nums[q.back()]);
            // else{
                // q.push_back(i);
                // ans.push_back(nums[i]);
            // }
            
        }
        return ans;
    }
};
